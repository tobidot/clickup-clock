# Compile the assets
# Zip the dist folder
# Upload the zip file to the release
# - name: Compile assets

#   run: npm run build
# - name: Zip dist folder
#   run: zip -r dist.zip dist
# - name: Create Release
#   run: curl -X POST --location "${{host}}/api/v1/projects/1/releases" \
#     -H "Authorization: Bearer {{api_token}}" \
#     -H "Accept: application/json" \
#     -H "Content-Disposition: form-data; name="file"; filename="dist.zip"" \
#     -H "Content-Type: multipart/form-data; boundary=WebAppBoundary" \
#     -F "zip=@dist.zip;filename=dist.zip;type=application/zip"
# - name: Upload dist.zip
#   uses: actions/upload-release-asset@v1
#   with:
#     upload_url: ${{ steps.create_release.outputs.upload_url }}
#     asset_path: ./dist.zip
#     asset_name: zip
#     asset_content_type: application/zip
name: Release New Version
run-name: ${{ github.actor }} Releases New Version
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Zip dist folder
        run: zip -r dist.zip dist
      - name: Create Release
        run: |
          curl -X POST --location "${{host}}/api/v1/projects/1/releases" \
            -H "Authorization: Bearer ${{api_token}}" \
            -H "Accept: application/json" \
            -H "Content-Disposition: form-data; name="file"; filename="dist.zip"" \
            -H "Content-Type: multipart/form-data; boundary=WebAppBoundary" \
            -F "zip=@dist.zip;filename=dist.zip;type=application/zip"
